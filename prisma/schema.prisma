
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum Role {
  Admin
}


model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  password    String
  role        Role         @default(Admin)
  picture     String?
  blogs       Blog[]
  projects    Project[]
  skills      Skill[]
  experiences Experience[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}


model Blog {
  id           Int      @id @default(autoincrement())
  title        String
  slug         String?   @unique
  content      String
  thumbnailUrl String?
  author       User     @relation(fields: [authorId], references: [id])
  authorId     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


model Project {
  id           Int      @id @default(autoincrement())
  title        String
  slug         String?   @unique
  description  String?
  features     Json?
  thumbnailUrl String?
  githubUrl    String?
  liveUrl      String?
  owner        User     @relation(fields: [ownerId], references: [id])
  ownerId      Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


model Skill {
  id        Int      @id @default(autoincrement())
  name      String
  level     String?
  category  String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Experience {
  id          Int       @id @default(autoincrement())
  companyName String?
  role        String?
  startDate   DateTime?
  endDate     DateTime?
  description String?
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

